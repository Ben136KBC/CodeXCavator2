<!--
// Copyright 2014 Christoph Brzozowski
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//This file has been significantly modified by Ben van der Merwe
-->
<Window x:Class="CodeXCavator.Indexer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l="clr-namespace:CodeXCavator.Indexer"
        Title="CodeXCavator - Indexer" Height="Auto" SizeToContent="Height" Width="800" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow" Topmost="False" Icon="/CodeXCavator.Indexer;component/Images/doc_tag.png" Closing="Window_Closing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </Window.Resources>
    <Grid Width="Auto" Height="Auto">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Rectangle Fill="#30000000"/>
        <Image Grid.Row="0" Stretch="None" HorizontalAlignment="Right" Source="/CodeXCavator.Indexer;component/Images/exclamation.png" Margin="5" x:Name="imgInfo" MouseLeftButtonDown="imgInfo_MouseLeftButtonDown" MouseLeave="imgInfo_MouseLeave">
            <Image.ToolTip>
                <ToolTip>
                    <StackPanel Orientation="Vertical" ToolTipService.ShowDuration="5000" Margin="0,5,0,0">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/CodeXCavator.Indexer;component/Images/logo.png" Stretch="None" VerticalAlignment="Top" Margin="0,0,5,0"/>
                            <TextBlock TextAlignment="Justify" MaxWidth="400" TextWrapping="Wrap" VerticalAlignment="Center">
                                            <Run FontSize="16" FontWeight="Bold" Foreground="White">CodeXCavator</Run><LineBreak/>
                                            <Bold Foreground="White">Version:</Bold> <Run Foreground="White" Text="{x:Static l:AssemblyVersion.Version}"/><LineBreak/>
                            </TextBlock>
                            <StackPanel.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#C01E90FF" Offset="0.5" />
                                    <GradientStop Color="#001E90FF" Offset="1" />
                                </LinearGradientBrush>
                            </StackPanel.Background>
                        </StackPanel>
                        <TextBlock TextAlignment="Justify" MaxWidth="400" TextWrapping="Wrap">
                                    A tool for source code indexing and full text search using the <Bold>Lucene</Bold> library from the <Bold>Apache Software Foundation</Bold>.<LineBreak/>
                                    <LineBreak/>
                                    <Bold>Icons:</Bold> LED Icon Set v1.0 - http://led24.de/iconset/<LineBreak/>
                                    <LineBreak/>
                                    <Bold>License:</Bold><LineBreak/>
                                    <Bold>Copyright 2014-<Run FontWeight="Bold" Text="{x:Static l:AssemblyVersion.CurrentYear}"/> Christoph Brzozowski</Bold><LineBreak/>
                                    <LineBreak/>
                                    Licensed under the <Bold>Apache License, Version 2.0</Bold> (the "License");
                                    you may not use this file except in compliance with the License.
                                    You may obtain a copy of the License at<LineBreak/>
                                    <LineBreak/>
                                        <Run>http://www.apache.org/licenses/LICENSE-2.0</Run><LineBreak/>
                                    <LineBreak/>
                                    Unless required by applicable law or agreed to in writing, software
                                    distributed under the License is distributed on an "AS IS" BASIS,
                                    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                    See the License for the specific language governing permissions and
                                    limitations under the License.
                        </TextBlock>
                    </StackPanel>
                </ToolTip>
            </Image.ToolTip>
        </Image>
        <ItemsControl Grid.Row="1" ItemsSource="{Binding IndexBuilders}" Height="Auto" AlternationCount="2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <Border Padding="5" BorderThickness="2" CornerRadius="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#FFFFFFFF" Offset="0.5" />
                                    <GradientStop Color="#40000000" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>                            
                            <DockPanel LastChildFill="True">
                                <Image DockPanel.Dock="Left" Source="/CodeXCavator.Indexer;component/Images/doc_tag.png" Stretch="None" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,0,5,0"/>
                                <Grid DockPanel.Dock="Right"> 
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Index: " FontWeight="Bold"/>
                                    <TextBlock Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3" Text="{Binding Name}"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Path: " FontWeight="Bold"/>
                                    <TextBlock Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3" Text="{Binding Path}"/>
                                    <TextBlock Grid.Column="2" Grid.Row="0" Text="Number of input files: " FontWeight="Bold"/>
                                    <Canvas x:Name="cnvSpinner" Grid.Column="3" Grid.Row="0" Width="9" Height="9" VerticalAlignment="Center" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                        <Canvas.RenderTransform>
                                            <RotateTransform x:Name="trfmSpinner"/>
                                        </Canvas.RenderTransform>
                                        <Ellipse Margin="0,0,0,0" Width="4" Height="4" Fill="#600076FF" />
                                        <Ellipse Margin="5,0,0,0" Width="4" Height="4" Fill="#A00076FF"/>
                                        <Ellipse Margin="5,5,0,0" Width="4" Height="4" Fill="#C00076FF"/>
                                        <Ellipse Margin="0,5,0,0" Width="4" Height="4" Fill="#FF0076FF"/>
                                    </Canvas>
                                    <TextBlock x:Name="tbNumberOfFiles" Grid.Column="3" Grid.Row="0" Text="{Binding NumberOfInputFiles}" Visibility="Visible"/>
                                    <TextBlock Grid.Column="2" Grid.Row="1" Text="Index size: " FontWeight="Bold"/>
                                    <TextBlock x:Name="tbIndexSize" Grid.Column="3" Grid.Row="1" Text="{Binding IndexSize}" Visibility="Visible"/>
                                    <Canvas x:Name="cnvSpinner3" Grid.Column="3" Grid.Row="1" Width="9" Height="9" VerticalAlignment="Center" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                        <Canvas.RenderTransform>
                                            <RotateTransform x:Name="trfmSpinner3"/>
                                        </Canvas.RenderTransform>
                                        <Ellipse Margin="0,0,0,0" Width="4" Height="4" Fill="#600076FF" />
                                        <Ellipse Margin="5,0,0,0" Width="4" Height="4" Fill="#A00076FF"/>
                                        <Ellipse Margin="5,5,0,0" Width="4" Height="4" Fill="#C00076FF"/>
                                        <Ellipse Margin="0,5,0,0" Width="4" Height="4" Fill="#FF0076FF"/>
                                    </Canvas>
                                    <Image x:Name="imgError" Grid.Row="0" Grid.RowSpan="2" Grid.Column="4" Source="/CodeXCavator.Indexer;component/Images/error.png" Stretch="None" ToolTip="{Binding Error}" Margin="5,0,0,0">
                                        <Image.Triggers>
                                            <EventTrigger RoutedEvent="MouseLeftButtonDown">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="popErrors" Storyboard.TargetProperty="IsOpen">
                                                            <BooleanAnimationUsingKeyFrames.KeyFrames>
                                                                <DiscreteBooleanKeyFrame Value="True" KeyTime="0"/>
                                                            </BooleanAnimationUsingKeyFrames.KeyFrames>
                                                        </BooleanAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Image.Triggers>
                                    </Image>
                                    <Popup x:Name="popErrors" AllowsTransparency="True" PlacementTarget="{Binding ElementName=imgError}" PopupAnimation="Fade" Placement="Center">
                                        <Border Background="White" BorderBrush="#80000000" BorderThickness="1" Padding="5" Margin="0,0,10,10" CornerRadius="4">
                                            <Border.Effect>
                                                <DropShadowEffect Opacity="0.5" />
                                            </Border.Effect>
                                            <DockPanel LastChildFill="True">
                                                <Label DockPanel.Dock="Top" Padding="0" Margin="0,0,0,2" FontWeight="Bold">
                                                    <TextBlock Text="{Binding Name, StringFormat=Errors: {0}}"/>
                                                </Label>
                                                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" FlowDirection="RightToLeft" Margin="0,5,0,0">
                                                    <Button DockPanel.Dock="Bottom" Command="ApplicationCommands.Copy" CommandTarget="{Binding ElementName=grdErrors}" ToolTip="Copy selection to clipboard" Focusable="False" IsTabStop="False">
                                                        <Image Source="/CodeXCavator.Indexer;component/Images/clipboard_sign.png" Stretch="None" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                                                    </Button>
                                                    <Button DockPanel.Dock="Bottom" Command="ApplicationCommands.SelectAll" CommandTarget="{Binding ElementName=grdErrors}" ToolTip="Select all" Focusable="False" IsTabStop="False">
                                                        <Image Source="/CodeXCavator.Indexer;component/Images/selection_select.png" Stretch="None" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                                                    </Button>
                                                </StackPanel>
                                                <DataGrid x:Name="grdErrors" DockPanel.Dock="Top" ItemsSource="{Binding Errors}" Width="Auto" MaxHeight="200" MaxWidth="600" IsReadOnly="True" HeadersVisibility="None" AutoGenerateColumns="False" GridLinesVisibility="None" AlternationCount="2" AlternatingRowBackground="#20FF0000">
                                                    <DataGrid.Columns>
                                                        <DataGridTextColumn Binding="{Binding}"/>
                                                    </DataGrid.Columns>
                                                </DataGrid>
                                            </DockPanel>
                                        </Border>
                                        <Popup.Triggers>                                            
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen">
                                                            <BooleanAnimationUsingKeyFrames.KeyFrames>
                                                                <DiscreteBooleanKeyFrame Value="False" KeyTime="0"/>
                                                            </BooleanAnimationUsingKeyFrames.KeyFrames>
                                                        </BooleanAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Popup.Triggers>
                                    </Popup>
                                </Grid>
                            </DockPanel>
                        </Border>
                        <Border Padding="5" BorderThickness="2" CornerRadius="1" Visibility="{Binding IsIndexing, Converter={StaticResource BoolToVis}}">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#FFFFFFFF" Offset="0.5" />
                                    <GradientStop Color="#40000000" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Indexing progress: " FontWeight="Bold"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding CurrentFile}" Grid.ColumnSpan="2" Margin="0,0,5,0"/>
                                <Canvas x:Name="cnvSpinner2" Grid.Column="2" Grid.Row="1" Width="9" Height="9" VerticalAlignment="Center" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Canvas.RenderTransform>
                                        <RotateTransform x:Name="trfmSpinner2"/>
                                    </Canvas.RenderTransform>
                                    <Ellipse Margin="0,0,0,0" Width="4" Height="4" Fill="#600076FF" />
                                    <Ellipse Margin="5,0,0,0" Width="4" Height="4" Fill="#A00076FF"/>
                                    <Ellipse Margin="5,5,0,0" Width="4" Height="4" Fill="#C00076FF"/>
                                    <Ellipse Margin="0,5,0,0" Width="4" Height="4" Fill="#FF0076FF"/>
                                </Canvas>
                                <ProgressBar x:Name="pbIndexProgress" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Height="16" Margin="0,5,0,0" Maximum="{Binding NumberOfInputFiles}" Minimum="0" Value="{Binding Progress, Mode=OneWay}" IsIndeterminate="False"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding NumberOfInputFiles}" Value="{x:Null}">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="stbSpinner">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="trfmSpinner" Storyboard.TargetProperty="Angle" From="0" To="360"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="stbSpinner">                                    
                                </StopStoryboard>
                            </DataTrigger.ExitActions>
                            <DataTrigger.Setters>
                                <Setter TargetName="cnvSpinner" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="tbNumberOfFiles" Property="Visibility" Value="Hidden"/>
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding NumberOfInputFiles}" Value="0">
                            <DataTrigger.Setters>
                                <Setter TargetName="pbIndexProgress" Property="IsIndeterminate" Value="True"/>
                            </DataTrigger.Setters>                                
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IndexSize}" Value="{x:Null}">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="stbSpinner3">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="trfmSpinner3" Storyboard.TargetProperty="Angle" From="0" To="360"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="stbSpinner3">
                                </StopStoryboard>
                            </DataTrigger.ExitActions>
                            <DataTrigger.Setters>
                                <Setter TargetName="cnvSpinner3" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="tbIndexSize" Property="Visibility" Value="Hidden"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding IsIndexing}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="stbSpinner2">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="trfmSpinner2" Storyboard.TargetProperty="Angle" From="0" To="360"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="stbSpinner2">
                                </StopStoryboard>
                            </DataTrigger.ExitActions>
                            <DataTrigger.Setters>
                                <Setter TargetName="cnvSpinner2" Property="Visibility" Value="Visible"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding Error}" Value="{x:Null}">
                            <DataTrigger.Setters>
                                <Setter TargetName="imgError" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger.Setters>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="imgError" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" AutoReverse="True" RepeatBehavior="Forever" Duration="0:0:0:0.5">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </DataTemplate.Triggers>                        
                </DataTemplate>                    
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
